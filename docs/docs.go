// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/companies": {
            "get": {
                "description": "List all companies (defined in https://github.com/Frumple/mrt-api/blob/main/data/companies.yml).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "List all companies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Company"
                            }
                        }
                    }
                }
            }
        },
        "/companies/{id}": {
            "get": {
                "description": "Get company by ID (defined in https://github.com/Frumple/mrt-api/blob/main/data/companies.yml).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Companies"
                ],
                "summary": "Get company by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Company ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Company"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/warps": {
            "get": {
                "description": "List all warps. Maximum number of warps returned per request is 2000. Use the 'offset' query parameter to show further entries.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warps"
                ],
                "summary": "List all warps",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by warp name.",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by player UUID (can be with or without hyphens).",
                        "name": "player",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by company ID (from /companies).",
                        "name": "company",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by world ID (from /worlds).",
                        "name": "world",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by type (0 = private, 1 = public).",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by 'name', 'creation_date', or 'visits'.",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by 'asc' (ascending) or 'desc' (descending).",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit number of warps returned. Maximum limit is 2000.",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of warps to skip before returning.",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.WarpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/warps/{id}": {
            "get": {
                "description": "Get warp by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Warps"
                ],
                "summary": "Get warp by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Warp ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Warp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        },
        "/worlds": {
            "get": {
                "description": "List all worlds (defined in https://github.com/Frumple/mrt-api/blob/main/data/worlds.yml).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worlds"
                ],
                "summary": "List all worlds",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.World"
                            }
                        }
                    }
                }
            }
        },
        "/worlds/{id}": {
            "get": {
                "description": "Get world by ID (defined in https://github.com/Frumple/mrt-api/blob/main/data/worlds.yml).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Worlds"
                ],
                "summary": "Get world by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "World ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.World"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Company": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                }
            }
        },
        "main.Error": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "main.Warp": {
            "type": "object",
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pitch": {
                    "type": "number"
                },
                "playerUUID": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "visits": {
                    "type": "integer"
                },
                "welcomeMessage": {
                    "type": "string"
                },
                "worldUUID": {
                    "type": "string"
                },
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                },
                "yaw": {
                    "type": "number"
                },
                "z": {
                    "type": "number"
                }
            }
        },
        "main.WarpResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/main.WarpResponsePagination"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Warp"
                    }
                }
            }
        },
        "main.WarpResponsePagination": {
            "type": "object",
            "properties": {
                "hits": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "total_hits": {
                    "type": "integer"
                }
            }
        },
        "main.World": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "GitHub Repository",
        "url": "https://github.com/Frumple/mrt-api"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0.0",
	Host:             "api.minecartrapidtransit.net",
	BasePath:         "/api/v2",
	Schemes:          []string{},
	Title:            "Minecart Rapid Transit Server API",
	Description:      "Provides data from the Minecart Rapid Transit (MRT) server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
